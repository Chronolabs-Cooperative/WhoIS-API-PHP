<?php 
/* Cachekey: cache/stash_default/documentation\api\php\883517afd65045a7e23ea85d381030b2/ */
/* Type: array */
/* Expiration: 2018-02-15T09:31:59+00:00 */



$loaded = true;
$expiration = 1518687119;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1518258375;
