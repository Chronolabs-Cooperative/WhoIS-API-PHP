<?php 
/* Cachekey: cache/stash_default/documentation\api\php\26f094e1524f719d51c32fc18f19b861/ */
/* Type: array */
/* Expiration: 2018-02-14T23:44:19+00:00 */



$loaded = true;
$expiration = 1518651859;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjFhZDNkY2YyNzVkYjRmNGU0YzIyZjk1NTExZWIzOTIyIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6ImNyZWF0ZWNvbmZpZ2Zvcm0ucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MzY6Imluc3RhbGwvaW5jbHVkZS9jcmVhdGVjb25maWdmb3JtLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTU2NDk6Ijw/cGhwCi8qKgogKiBXaG9JUyBSRVNUIFNlcnZpY2VzIEFQSQogKgogKiBZb3UgbWF5IG5vdCBjaGFuZ2Ugb3IgYWx0ZXIgYW55IHBvcnRpb24gb2YgdGhpcyBjb21tZW50IG9yIGNyZWRpdHMKICogb2Ygc3VwcG9ydGluZyBkZXZlbG9wZXJzIGZyb20gdGhpcyBzb3VyY2UgY29kZSBvciBhbnkgc3VwcG9ydGluZyBzb3VyY2UgY29kZQogKiB3aGljaCBpcyBjb25zaWRlcmVkIGNvcHlyaWdodGVkIChjKSBtYXRlcmlhbCBvZiB0aGUgb3JpZ2luYWwgY29tbWVudCBvciBjcmVkaXQgYXV0aG9ycy4KICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4KICoKICogQGNvcHlyaWdodCAgICAgICBDaHJvbm9sYWJzIENvb3BlcmF0aXZlIGh0dHA6Ly9zeWQuYXUuc25haWxzLmVtYWlsCiAqIEBsaWNlbnNlICAgICAgICAgQUNBREVNSUMgQVBMIDIgKGh0dHBzOi8vc291cmNlZm9yZ2UubmV0L3UvY2hyb25vbGFic2Nvb3Avd2lraS9BY2FkZW1pYyUyMFB1YmxpYyUyMExpY2Vuc2UlMkMlMjB2ZXJzaW9uJTIwMi4wLykKICogQGxpY2Vuc2UgICAgICAgICBHTlUgR1BMIDMgKGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwuaHRtbCkKICogQHBhY2thZ2UgICAgICAgICB3aG9pcy1hcGkKICogQHNpbmNlICAgICAgICAgICAyLjIuMTMKICogQGF1dGhvciAgICAgICAgICBEci4gU2ltb24gQW50b255IFJvYmVydHMgPHNpbW9uQHNuYWlscy5lbWFpbD4KICogQHZlcnNpb24gICAgICAgICAyLjIuMTQKICogQGRlc2NyaXB0aW9uCQlBIFJFU1QgQVBJIEludGVyZmFjZSB3aGljaCByZXRyaWV2ZXMgSVB2NCwgSVB2NiwgVExELCBnTFREIFdob2lzIERhdGEKICogQGxpbmsgICAgICAgICAgICBodHRwOi8vaW50ZXJuZXRmb3VuZGVyLndvcmRwcmVzcy5jb20KICogQGxpbmsgICAgICAgICAgICBodHRwczovL2dpdGh1Yi5jb20vQ2hyb25vbGFicy1Db29wZXJhdGl2ZS9XaG9JUy1BUEktUEhQCiAqIEBsaW5rICAgICAgICAgICAgaHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcC9jaHJvbm9sYWJzLWNvb3BlcmF0aXZlCiAqIEBsaW5rICAgICAgICAgICAgaHR0cHM6Ly9mYWNlYm9vay5jb20vQ2hyb25vbGFic0Nvb3AKICogQGxpbmsgICAgICAgICAgICBodHRwczovL3R3aXR0ZXIuY29tL0Nocm9ub2xhYnNDb29wCiAqIAogKi8KCgppZiAoIWRlZmluZWQoJ0FQSV9JTlNUQUxMJykpIHsKICAgIGRpZSgnQVBJIEN1c3RvbSBJbnN0YWxsYXRpb24gZGllJyk7Cn0KCmluY2x1ZGVfb25jZSBBUElfUk9PVF9QQVRIIC4gJy9jbGFzcy9hcGlmb3JtbG9hZGVyLnBocCc7CmluY2x1ZGVfb25jZSBBUElfUk9PVF9QQVRIIC4gJy9jbGFzcy9hcGlsaXN0cy5waHAnOwoKZGVmaW5lKCdQUkVGXzEnLCBfTURfQU1fR0VORVJBTCk7CmRlZmluZSgnUFJFRl8yJywgX01EX0FNX1VTRVJTRVRUSU5HUyk7CmRlZmluZSgnUFJFRl8zJywgX01EX0FNX01FVEFGT09URVIpOwpkZWZpbmUoJ1BSRUZfNCcsIF9NRF9BTV9DRU5TT1IpOwpkZWZpbmUoJ1BSRUZfNScsIF9NRF9BTV9TRUFSQ0gpOwpkZWZpbmUoJ1BSRUZfNicsIF9NRF9BTV9NQUlMRVIpOwppZiAoZGVmaW5lZCgnX01EX0FNX0FVVEhFTlRJQ0FUSU9OJykpIHsKICAgIGRlZmluZSgnUFJFRl83JywgX01EX0FNX0FVVEhFTlRJQ0FUSU9OKTsKfQoKLyoqCiAqIEBwYXJhbSAkY29uZmlnCiAqCiAqIEByZXR1cm4gYXJyYXkKICovCmZ1bmN0aW9uIGNyZWF0ZUNvbmZpZ2Zvcm0oJGNvbmZpZykKewogICAgYXBpX2xvYWQoJ0FQSUZvcm1SZW5kZXJlckJvb3RzdHJhcDMnKTsKICAgIEFQSUZvcm1SZW5kZXJlcjo6Z2V0SW5zdGFuY2UoKS0+c2V0KG5ldyBBUElGb3JtUmVuZGVyZXJCb290c3RyYXAzKCkpOwoKICAgIC8qIEB2YXIgJGNvbmZpZ19oYW5kbGVyIEFQSUNvbmZpZ0hhbmRsZXIgICovCiAgICAkY29uZmlnX2hhbmRsZXIgICAgICAgICA9IGFwaV9nZXRIYW5kbGVyKCdjb25maWcnKTsKICAgICRHTE9CQUxTWydhcGlDb25maWcnXSA9ICRhcGlDb25maWcgPSAkY29uZmlnX2hhbmRsZXItPmdldENvbmZpZ3NCeUNhdChBUElfQ09ORik7CgogICAgJHJldCAgICAgICA9IGFycmF5KCk7CiAgICAkY29uZmNvdW50ID0gY291bnQoJGNvbmZpZyk7CgogICAgZm9yICgkaSA9IDA7ICRpIDwgJGNvbmZjb3VudDsgKyskaSkgewogICAgICAgICRjb25mX2NhdGlkID0gJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9jYXRpZCcpOwogICAgICAgIGlmICghaXNzZXQoJHJldFskY29uZl9jYXRpZF0pKSB7CiAgICAgICAgICAgICRmb3JtX3RpdGxlICAgICAgID0gY29uc3RhbnQoJ1BSRUZfJyAuICRjb25mX2NhdGlkKTsKICAgICAgICAgICAgJHJldFskY29uZl9jYXRpZF0gPSBuZXcgQVBJVGhlbWVGb3JtKCRmb3JtX3RpdGxlLCAnY29uZmlncycsICdpbmRleC5waHAnLCAncG9zdCcpOwogICAgICAgIH0KCiAgICAgICAgJHRpdGxlID0gY29uc3RhbnQoJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl90aXRsZScpKTsKCiAgICAgICAgc3dpdGNoICgkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX2Zvcm10eXBlJykpIHsKICAgICAgICAgICAgY2FzZSAndGV4dGFyZWEnOgogICAgICAgICAgICAgICAgJG15dHMgPSBNeVRleHRTYW5pdGl6ZXI6OmdldEluc3RhbmNlKCk7CiAgICAgICAgICAgICAgICBpZiAoJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl92YWx1ZXR5cGUnKSA9PT0gJ2FycmF5JykgewogICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgaXMgZXhjZXB0aW9uYWwuLiBvbmx5IHdoZW4gdmFsdWUgdHlwZSBpcyBhcnJheW5lZWQgYSBzbWFydGVyIHdheSBmb3IgdGhpcwogICAgICAgICAgICAgICAgICAgICRlbGUgPSAoJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl92YWx1ZScpICE9ICcnKSA/IG5ldyBBUElGb3JtVGV4dEFyZWEoJHRpdGxlLCAkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX25hbWUnKSwgJG15dHMtPmh0bWxzcGVjaWFsY2hhcnMoaW1wbG9kZSgnfCcsICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSkpLCA1LCA1MCkgOiBuZXcgQVBJRm9ybVRleHRBcmVhKCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksICcnLCA1LCA1MCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICRlbGUgPSBuZXcgQVBJRm9ybVRleHRBcmVhKCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksICRteXRzLT5odG1sc3BlY2lhbGNoYXJzKCRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSksIDUsIDEwMCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgJ3NlbGVjdCc6CiAgICAgICAgICAgICAgICAkZWxlICAgICA9IG5ldyBBUElGb3JtU2VsZWN0KCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSk7CiAgICAgICAgICAgICAgICAkb3B0aW9ucyA9ICRjb25maWdfaGFuZGxlci0+Z2V0Q29uZmlnT3B0aW9ucyhuZXcgQ3JpdGVyaWEoJ2NvbmZfaWQnLCAkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX2lkJykpKTsKICAgICAgICAgICAgICAgICRvcGNvdW50ID0gY291bnQoJG9wdGlvbnMpOwogICAgICAgICAgICAgICAgZm9yICgkaiA9IDA7ICRqIDwgJG9wY291bnQ7ICsrJGopIHsKICAgICAgICAgICAgICAgICAgICAkb3B0dmFsID0gZGVmaW5lZCgkb3B0aW9uc1skal0tPmdldFZhcignY29uZm9wX3ZhbHVlJykpID8gY29uc3RhbnQoJG9wdGlvbnNbJGpdLT5nZXRWYXIoJ2NvbmZvcF92YWx1ZScpKSA6ICRvcHRpb25zWyRqXS0+Z2V0VmFyKCdjb25mb3BfdmFsdWUnKTsKICAgICAgICAgICAgICAgICAgICAkb3B0a2V5ID0gZGVmaW5lZCgkb3B0aW9uc1skal0tPmdldFZhcignY29uZm9wX25hbWUnKSkgPyBjb25zdGFudCgkb3B0aW9uc1skal0tPmdldFZhcignY29uZm9wX25hbWUnKSkgOiAkb3B0aW9uc1skal0tPmdldFZhcignY29uZm9wX25hbWUnKTsKICAgICAgICAgICAgICAgICAgICAkZWxlLT5hZGRPcHRpb24oJG9wdHZhbCwgJG9wdGtleSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgJ3NlbGVjdF9tdWx0aSc6CiAgICAgICAgICAgICAgICAkZWxlICAgICA9IG5ldyBBUElGb3JtU2VsZWN0KCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSwgNSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAkb3B0aW9ucyA9ICRjb25maWdfaGFuZGxlci0+Z2V0Q29uZmlnT3B0aW9ucyhuZXcgQ3JpdGVyaWEoJ2NvbmZfaWQnLCAkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX2lkJykpKTsKICAgICAgICAgICAgICAgICRvcGNvdW50ID0gY291bnQoJG9wdGlvbnMpOwogICAgICAgICAgICAgICAgZm9yICgkaiA9IDA7ICRqIDwgJG9wY291bnQ7ICsrJGopIHsKICAgICAgICAgICAgICAgICAgICAkb3B0dmFsID0gZGVmaW5lZCgkb3B0aW9uc1skal0tPmdldFZhcignY29uZm9wX3ZhbHVlJykpID8gY29uc3RhbnQoJG9wdGlvbnNbJGpdLT5nZXRWYXIoJ2NvbmZvcF92YWx1ZScpKSA6ICRvcHRpb25zWyRqXS0+Z2V0VmFyKCdjb25mb3BfdmFsdWUnKTsKICAgICAgICAgICAgICAgICAgICAkb3B0a2V5ID0gZGVmaW5lZCgkb3B0aW9uc1skal0tPmdldFZhcignY29uZm9wX25hbWUnKSkgPyBjb25zdGFudCgkb3B0aW9uc1skal0tPmdldFZhcignY29uZm9wX25hbWUnKSkgOiAkb3B0aW9uc1skal0tPmdldFZhcignY29uZm9wX25hbWUnKTsKICAgICAgICAgICAgICAgICAgICAkZWxlLT5hZGRPcHRpb24oJG9wdHZhbCwgJG9wdGtleSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgJ3llc25vJzoKICAgICAgICAgICAgICAgICRlbGUgPSBuZXcgQVBJRm9ybVJhZGlvWU4oJHRpdGxlLCAkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX25hbWUnKSwgJGNvbmZpZ1skaV0tPmdldENvbmZWYWx1ZUZvck91dHB1dCgpLCBfWUVTLCBfTk8pOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlICd0aGVtZSc6CiAgICAgICAgICAgIGNhc2UgJ3RoZW1lX211bHRpJzoKICAgICAgICAgICAgICAgICRlbGUgPSAoJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9mb3JtdHlwZScpICE9PSAndGhlbWVfbXVsdGknKSA/IG5ldyBBUElGb3JtU2VsZWN0KCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSkgOiBuZXcgQVBJRm9ybVNlbGVjdCgkdGl0bGUsICRjb25maWdbJGldLT5nZXRWYXIoJ2NvbmZfbmFtZScpLCAkY29uZmlnWyRpXS0+Z2V0Q29uZlZhbHVlRm9yT3V0cHV0KCksIDUsIHRydWUpOwogICAgICAgICAgICAgICAgcmVxdWlyZV9vbmNlIEFQSV9ST09UX1BBVEggLiAnL2NsYXNzL2FwaWxpc3RzLnBocCc7CiAgICAgICAgICAgICAgICAkZGlybGlzdCA9IEFQSUxpc3RzOjpnZXRUaGVtZXNMaXN0KCk7CiAgICAgICAgICAgICAgICBpZiAoIWVtcHR5KCRkaXJsaXN0KSkgewogICAgICAgICAgICAgICAgICAgIGFzb3J0KCRkaXJsaXN0KTsKICAgICAgICAgICAgICAgICAgICAkZWxlLT5hZGRPcHRpb25BcnJheSgkZGlybGlzdCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvLyBvbGQgdGhlbWUgdmFsdWUgaXMgdXNlZCB0byBkZXRlcm1pbmUgd2hldGhlciB0byB1cGRhdGUgY2FjaGUgb3Igbm90LiBraW5kIG9mIGRpcnR5IHdheQogICAgICAgICAgICAgICAgJGZvcm0tPmFkZEVsZW1lbnQobmV3IEFQSUZvcm1IaWRkZW4oJ19vbGRfdGhlbWUnLCAkY29uZmlnWyRpXS0+Z2V0Q29uZlZhbHVlRm9yT3V0cHV0KCkpKTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAndHBsc2V0JzoKICAgICAgICAgICAgICAgICRlbGUgICAgICAgICAgICA9IG5ldyBBUElGb3JtU2VsZWN0KCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSk7CiAgICAgICAgICAgICAgICAkdHBsc2V0X2hhbmRsZXIgPSBhcGlfZ2V0SGFuZGxlcigndHBsc2V0Jyk7CiAgICAgICAgICAgICAgICAkdHBsc2V0bGlzdCAgICAgPSAkdHBsc2V0X2hhbmRsZXItPmdldExpc3QoKTsKICAgICAgICAgICAgICAgIGFzb3J0KCR0cGxzZXRsaXN0KTsKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCR0cGxzZXRsaXN0IGFzICRrZXkgPT4gJG5hbWUpIHsKICAgICAgICAgICAgICAgICAgICAkZWxlLT5hZGRPcHRpb24oJGtleSwgJG5hbWUpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLy8gb2xkIHRoZW1lIHZhbHVlIGlzIHVzZWQgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gdXBkYXRlIGNhY2hlIG9yIG5vdC4ga2luZCBvZiBkaXJ0eSB3YXkKICAgICAgICAgICAgICAgICRmb3JtLT5hZGRFbGVtZW50KG5ldyBBUElGb3JtSGlkZGVuKCdfb2xkX3RoZW1lJywgJGNvbmZpZ1skaV0tPmdldENvbmZWYWx1ZUZvck91dHB1dCgpKSk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgJ3RpbWV6b25lJzoKICAgICAgICAgICAgICAgICRlbGUgPSBuZXcgQVBJRm9ybVNlbGVjdFRpbWV6b25lKCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgJ2xhbmd1YWdlJzoKICAgICAgICAgICAgICAgICRlbGUgPSBuZXcgQVBJRm9ybVNlbGVjdExhbmcoJHRpdGxlLCAkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX25hbWUnKSwgJGNvbmZpZ1skaV0tPmdldENvbmZWYWx1ZUZvck91dHB1dCgpKTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAnc3RhcnRwYWdlJzoKICAgICAgICAgICAgICAgICRlbGUgICAgICAgICAgICA9IG5ldyBBUElGb3JtU2VsZWN0KCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSk7CiAgICAgICAgICAgICAgICAvKiBAdmFyICRtb2R1bGVfaGFuZGxlciBBUElNb2R1bGVIYW5kbGVyICovCiAgICAgICAgICAgICAgICAkbW9kdWxlX2hhbmRsZXIgPSBhcGlfZ2V0SGFuZGxlcignbW9kdWxlJyk7CiAgICAgICAgICAgICAgICAkY3JpdGVyaWEgICAgICAgPSBuZXcgQ3JpdGVyaWFDb21wbyhuZXcgQ3JpdGVyaWEoJ2hhc21haW4nLCAxKSk7CiAgICAgICAgICAgICAgICAkY3JpdGVyaWEtPmFkZChuZXcgQ3JpdGVyaWEoJ2lzYWN0aXZlJywgMSkpOwogICAgICAgICAgICAgICAgJG1vZHVsZXNsaXN0ICAgICAgID0gJG1vZHVsZV9oYW5kbGVyLT5nZXRMaXN0KCRjcml0ZXJpYSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAkbW9kdWxlc2xpc3RbJy0tJ10gPSBfTURfQU1fTk9ORTsKICAgICAgICAgICAgICAgICRlbGUtPmFkZE9wdGlvbkFycmF5KCRtb2R1bGVzbGlzdCk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgJ2dyb3VwJzoKICAgICAgICAgICAgICAgICRlbGUgPSBuZXcgQVBJRm9ybVNlbGVjdEdyb3VwKCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksIGZhbHNlLCAkY29uZmlnWyRpXS0+Z2V0Q29uZlZhbHVlRm9yT3V0cHV0KCksIDEsIGZhbHNlKTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAnZ3JvdXBfbXVsdGknOgogICAgICAgICAgICAgICAgJGVsZSA9IG5ldyBBUElGb3JtU2VsZWN0R3JvdXAoJHRpdGxlLCAkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX25hbWUnKSwgZmFsc2UsICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSwgNSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIC8vIFJNVi1OT1RJRlkgLSBhZGRlZCAndXNlcicgYW5kICd1c2VyX211bHRpJwogICAgICAgICAgICBjYXNlICd1c2VyJzoKICAgICAgICAgICAgICAgICRlbGUgPSBuZXcgQVBJRm9ybVNlbGVjdFVzZXIoJHRpdGxlLCAkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX25hbWUnKSwgZmFsc2UsICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSwgMSwgZmFsc2UpOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlICd1c2VyX211bHRpJzoKICAgICAgICAgICAgICAgICRlbGUgPSBuZXcgQVBJRm9ybVNlbGVjdFVzZXIoJHRpdGxlLCAkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX25hbWUnKSwgZmFsc2UsICRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSwgNSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgJ21vZHVsZV9jYWNoZSc6CiAgICAgICAgICAgICAgICAvKiBAdmFyICRtb2R1bGVfaGFuZGxlciBBUElNb2R1bGVIYW5kbGVyICovCiAgICAgICAgICAgICAgICAkbW9kdWxlX2hhbmRsZXIgPSBhcGlfZ2V0SGFuZGxlcignbW9kdWxlJyk7CiAgICAgICAgICAgICAgICAkbW9kdWxlcyAgICAgICAgPSAkbW9kdWxlX2hhbmRsZXItPmdldE9iamVjdHMobmV3IENyaXRlcmlhKCdoYXNtYWluJywgMSksIHRydWUpOwogICAgICAgICAgICAgICAgJGN1cnJyZW50X3ZhbCAgID0gJGNvbmZpZ1skaV0tPmdldENvbmZWYWx1ZUZvck91dHB1dCgpOwogICAgICAgICAgICAgICAgJGNhY2hlX29wdGlvbnMgID0gYXJyYXkoCiAgICAgICAgICAgICAgICAgICAgJzAnICAgICAgPT4gX05PQ0FDSEUsCiAgICAgICAgICAgICAgICAgICAgJzMwJyAgICAgPT4gc3ByaW50ZihfU0VDT05EUywgMzApLAogICAgICAgICAgICAgICAgICAgICc2MCcgICAgID0+IF9NSU5VVEUsCiAgICAgICAgICAgICAgICAgICAgJzMwMCcgICAgPT4gc3ByaW50ZihfTUlOVVRFUywgNSksCiAgICAgICAgICAgICAgICAgICAgJzE4MDAnICAgPT4gc3ByaW50ZihfTUlOVVRFUywgMzApLAogICAgICAgICAgICAgICAgICAgICczNjAwJyAgID0+IF9IT1VSLAogICAgICAgICAgICAgICAgICAgICcxODAwMCcgID0+IHNwcmludGYoX0hPVVJTLCA1KSwKICAgICAgICAgICAgICAgICAgICAnODY0MDAnICA9PiBfREFZLAogICAgICAgICAgICAgICAgICAgICcyNTkyMDAnID0+IHNwcmludGYoX0RBWVMsIDMpLAogICAgICAgICAgICAgICAgICAgICc2MDQ4MDAnID0+IF9XRUVLKTsKICAgICAgICAgICAgICAgIGlmIChjb3VudCgkbW9kdWxlcykgPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgJGVsZSA9IG5ldyBBUElGb3JtRWxlbWVudFRyYXkoJHRpdGxlLCAnPGJyPicpOwogICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKGFycmF5X2tleXMoJG1vZHVsZXMpIGFzICRtaWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGNfdmFsICAgPSBpc3NldCgkY3VycnJlbnRfdmFsWyRtaWRdKSA/IChpbnQpJGN1cnJyZW50X3ZhbFskbWlkXSA6IG51bGw7CiAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmb3JtID0gbmV3IEFQSUZvcm1TZWxlY3QoJG1vZHVsZXNbJG1pZF0tPmdldFZhcignbmFtZScpLCAkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX25hbWUnKSAuICJbJG1pZF0iLCAkY192YWwpOwogICAgICAgICAgICAgICAgICAgICAgICAkc2VsZm9ybS0+YWRkT3B0aW9uQXJyYXkoJGNhY2hlX29wdGlvbnMpOwogICAgICAgICAgICAgICAgICAgICAgICAkZWxlLT5hZGRFbGVtZW50KCRzZWxmb3JtKTsKICAgICAgICAgICAgICAgICAgICAgICAgdW5zZXQoJHNlbGZvcm0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgJGVsZSA9IG5ldyBBUElGb3JtTGFiZWwoJHRpdGxlLCBfTURfQU1fTk9NT0RVTEUpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlICdzaXRlX2NhY2hlJzoKICAgICAgICAgICAgICAgICRlbGUgPSBuZXcgQVBJRm9ybVNlbGVjdCgkdGl0bGUsICRjb25maWdbJGldLT5nZXRWYXIoJ2NvbmZfbmFtZScpLCAkY29uZmlnWyRpXS0+Z2V0Q29uZlZhbHVlRm9yT3V0cHV0KCkpOwogICAgICAgICAgICAgICAgJGVsZS0+YWRkT3B0aW9uQXJyYXkoYXJyYXkoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzAnICAgICAgPT4gX05PQ0FDSEUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzMwJyAgICAgPT4gc3ByaW50ZihfU0VDT05EUywgMzApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc2MCcgICAgID0+IF9NSU5VVEUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzMwMCcgICAgPT4gc3ByaW50ZihfTUlOVVRFUywgNSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzE4MDAnICAgPT4gc3ByaW50ZihfTUlOVVRFUywgMzApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICczNjAwJyAgID0+IF9IT1VSLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcxODAwMCcgID0+IHNwcmludGYoX0hPVVJTLCA1KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnODY0MDAnICA9PiBfREFZLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcyNTkyMDAnID0+IHNwcmludGYoX0RBWVMsIDMpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc2MDQ4MDAnID0+IF9XRUVLKSk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgJ3Bhc3N3b3JkJzoKICAgICAgICAgICAgICAgICRteXRzID0gTXlUZXh0U2FuaXRpemVyOjpnZXRJbnN0YW5jZSgpOwogICAgICAgICAgICAgICAgJGVsZSAgPSBuZXcgQVBJRm9ybVBhc3N3b3JkKCR0aXRsZSwgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9uYW1lJyksIDUwLCAyNTUsICRteXRzLT5odG1sc3BlY2lhbGNoYXJzKCRjb25maWdbJGldLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSkpOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlICdjb2xvcic6CiAgICAgICAgICAgICAgICAkbXl0cyA9IE15VGV4dFNhbml0aXplcjo6Z2V0SW5zdGFuY2UoKTsKICAgICAgICAgICAgICAgICRlbGUgID0gbmV3IEFQSUZvcm1Db2xvclBpY2tlcigkdGl0bGUsICRjb25maWdbJGldLT5nZXRWYXIoJ2NvbmZfbmFtZScpLCAkbXl0cy0+aHRtbHNwZWNpYWxjaGFycygkY29uZmlnWyRpXS0+Z2V0Q29uZlZhbHVlRm9yT3V0cHV0KCkpKTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAnaGlkZGVuJzoKICAgICAgICAgICAgICAgICRteXRzID0gTXlUZXh0U2FuaXRpemVyOjpnZXRJbnN0YW5jZSgpOwogICAgICAgICAgICAgICAgJGVsZSAgPSBuZXcgQVBJRm9ybUhpZGRlbigkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX25hbWUnKSwgJG15dHMtPmh0bWxzcGVjaWFsY2hhcnMoJGNvbmZpZ1skaV0tPmdldENvbmZWYWx1ZUZvck91dHB1dCgpKSk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgJ3RleHRib3gnOgogICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgJG15dHMgPSBNeVRleHRTYW5pdGl6ZXI6OmdldEluc3RhbmNlKCk7CiAgICAgICAgICAgICAgICAkZWxlICA9IG5ldyBBUElGb3JtVGV4dCgkdGl0bGUsICRjb25maWdbJGldLT5nZXRWYXIoJ2NvbmZfbmFtZScpLCA1MCwgMjU1LCAkbXl0cy0+aHRtbHNwZWNpYWxjaGFycygkY29uZmlnWyRpXS0+Z2V0Q29uZlZhbHVlRm9yT3V0cHV0KCkpKTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KCiAgICAgICAgaWYgKGRlZmluZWQoJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9kZXNjJykpICYmIGNvbnN0YW50KCRjb25maWdbJGldLT5nZXRWYXIoJ2NvbmZfZGVzYycpKSAhPSAnJykgewogICAgICAgICAgICAkZWxlLT5zZXREZXNjcmlwdGlvbihjb25zdGFudCgkY29uZmlnWyRpXS0+Z2V0VmFyKCdjb25mX2Rlc2MnKSkpOwogICAgICAgIH0KICAgICAgICAkcmV0WyRjb25mX2NhdGlkXS0+YWRkRWxlbWVudCgkZWxlKTsKCiAgICAgICAgJGhpZGRlbiA9IG5ldyBBUElGb3JtSGlkZGVuKCdjb25mX2lkc1tdJywgJGNvbmZpZ1skaV0tPmdldFZhcignY29uZl9pZCcpKTsKICAgICAgICAkcmV0WyRjb25mX2NhdGlkXS0+YWRkRWxlbWVudCgkaGlkZGVuKTsKCiAgICAgICAgdW5zZXQoJGVsZSwgJGhpZGRlbik7CiAgICB9CgogICAgcmV0dXJuICRyZXQ7Cn0KCi8qKgogKiBAcGFyYW0gJGNvbmZpZwogKgogKiBAcmV0dXJuIGFycmF5CiAqLwpmdW5jdGlvbiBjcmVhdGVUaGVtZWZvcm0oJGNvbmZpZykKewogICAgYXBpX2xvYWQoJ0FQSUZvcm1SZW5kZXJlckJvb3RzdHJhcDMnKTsKICAgIEFQSUZvcm1SZW5kZXJlcjo6Z2V0SW5zdGFuY2UoKS0+c2V0KG5ldyBBUElGb3JtUmVuZGVyZXJCb290c3RyYXAzKCkpOwoKICAgICR0aXRsZSAgICAgICAgICA9ICghZGVmaW5lZCgkY29uZmlnLT5nZXRWYXIoJ2NvbmZfZGVzYycpKSB8fCBjb25zdGFudCgkY29uZmlnLT5nZXRWYXIoJ2NvbmZfZGVzYycpKSA9PT0gJycpID8gY29uc3RhbnQoJGNvbmZpZy0+Z2V0VmFyKCdjb25mX3RpdGxlJykpIDogY29uc3RhbnQoJGNvbmZpZy0+Z2V0VmFyKCdjb25mX3RpdGxlJykpIC4gJzxicj48YnI+PHNwYW4+JyAuIGNvbnN0YW50KCRjb25maWctPmdldFZhcignY29uZl9kZXNjJykpIC4gJzwvc3Bhbj4nOwogICAgJGZvcm1fdGhlbWVfc2V0ID0gbmV3IEFQSUZvcm1TZWxlY3QoJycsICRjb25maWctPmdldFZhcignY29uZl9uYW1lJyksICRjb25maWctPmdldENvbmZWYWx1ZUZvck91dHB1dCgpLCAxLCBmYWxzZSk7CiAgICAkZGlybGlzdCAgICAgICAgPSBBUElMaXN0czo6Z2V0VGhlbWVzTGlzdCgpOwogICAgaWYgKCFlbXB0eSgkZGlybGlzdCkpIHsKICAgICAgICBhc29ydCgkZGlybGlzdCk7CiAgICAgICAgJGZvcm1fdGhlbWVfc2V0LT5hZGRPcHRpb25BcnJheSgkZGlybGlzdCk7CiAgICB9CgogICAgJGxhYmVsX2NvbnRlbnQgPSAnJzsKCiAgICAvLyByZWFkIGluaSBmaWxlIGZvciBlYWNoIHRoZW1lCiAgICBmb3JlYWNoICgkZGlybGlzdCBhcyAkdGhlbWUpIHsKICAgICAgICAvLyBzZXQgZGVmYXVsdCB2YWx1ZQogICAgICAgICR0aGVtZV9pbmkgPSBhcnJheSgKICAgICAgICAgICAgJ05hbWUnICAgICAgICA9PiAkdGhlbWUsCiAgICAgICAgICAgICdEZXNjcmlwdGlvbicgPT4gJycsCiAgICAgICAgICAgICdWZXJzaW9uJyAgICAgPT4gJycsCiAgICAgICAgICAgICdGb3JtYXQnICAgICAgPT4gJycsCiAgICAgICAgICAgICdBdXRob3InICAgICAgPT4gJycsCiAgICAgICAgICAgICdEZW1vJyAgICAgICAgPT4gJycsCiAgICAgICAgICAgICdVcmwnICAgICAgICAgPT4gJycsCiAgICAgICAgICAgICdEb3dubG9hZCcgICAgPT4gJycsCiAgICAgICAgICAgICdXM0MnICAgICAgICAgPT4gJycsCiAgICAgICAgICAgICdMaWNlbmNlJyAgICAgPT4gJycsCiAgICAgICAgICAgICd0aHVtYm5haWwnICAgPT4gJ3NjcmVlbnNob3QuZ2lmJywKICAgICAgICAgICAgJ3NjcmVlbnNob3QnICA9PiAnc2NyZWVuc2hvdC5wbmcnKTsKCiAgICAgICAgaWYgKCR0aGVtZSA9PSAkY29uZmlnLT5nZXRDb25mVmFsdWVGb3JPdXRwdXQoKSkgewogICAgICAgICAgICAkbGFiZWxfY29udGVudCAuPSAnPGRpdiBjbGFzcz0idGhlbWVfcHJldmlldyIgaWQ9IicuJHRoZW1lLiciIHN0eWxlPSJkaXNwbGF5OmJsb2NrOyI+JzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAkbGFiZWxfY29udGVudCAuPSAnPGRpdiBjbGFzcz0idGhlbWVfcHJldmlldyIgaWQ9IicuJHRoZW1lLiciIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4nOwogICAgICAgIH0KICAgICAgICBpZiAoZmlsZV9leGlzdHMoQVBJX1JPT1RfUEFUSCAuICIvdGhlbWVzLyR0aGVtZS90aGVtZS5pbmkiKSkgewogICAgICAgICAgICAkdGhlbWVfaW5pID0gcGFyc2VfaW5pX2ZpbGUoQVBJX1JPT1RfUEFUSCAuICIvdGhlbWVzLyR0aGVtZS90aGVtZS5pbmkiKTsKICAgICAgICAgICAgaWYgKCR0aGVtZV9pbmlbJ3NjcmVlbnNob3QnXSA9PSAnJykgewogICAgICAgICAgICAgICAgJHRoZW1lX2luaVsnc2NyZWVuc2hvdCddID0gJ3NjcmVlbnNob3QucG5nJzsKICAgICAgICAgICAgICAgICR0aGVtZV9pbmlbJ3RodW1ibmFpbCddICA9ICd0aHVtYm5haWwucG5nJzsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKCR0aGVtZV9pbmlbJ3NjcmVlbnNob3QnXSAhPT0gJycgJiYgZmlsZV9leGlzdHMoQVBJX1JPT1RfUEFUSCAuICcvdGhlbWVzLycgLiAkdGhlbWUgLiAnLycgLiAkdGhlbWVfaW5pWydzY3JlZW5zaG90J10pKSB7CiAgICAgICAgICAgICRsYWJlbF9jb250ZW50IC49ICc8aW1nIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgc3JjPSInIC4gQVBJX1VSTCAuICcvdGhlbWVzLycgLiAkdGhlbWUgLiAnLycgLiAkdGhlbWVfaW5pWydzY3JlZW5zaG90J10gLiAnIiBhbHQ9IlNjcmVlbnNob3QiIC8+JzsKICAgICAgICB9IGVsc2VpZiAoJHRoZW1lX2luaVsndGh1bWJuYWlsJ10gIT09ICcnICYmIGZpbGVfZXhpc3RzKEFQSV9ST09UX1BBVEggLiAnL3RoZW1lcy8nIC4gJHRoZW1lIC4nLycgLiAkdGhlbWVfaW5pWyd0aHVtYm5haWwnXSkpIHsKICAgICAgICAgICAgJGxhYmVsX2NvbnRlbnQgLj0gJzxpbWcgY2xhc3M9ImltZy1yZXNwb25zaXZlIiBzcmM9IicgLiBBUElfVVJMIC4gJy90aGVtZXMvJyAuICR0aGVtZSAuICcvJyAuICR0aGVtZV9pbmlbJ3RodW1ibmFpbCddIC4gJyIgYWx0PSIkdGhlbWUiIC8+JzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAkbGFiZWxfY29udGVudCAuPSBUSEVNRV9OT19TQ1JFRU5TSE9UOwogICAgICAgIH0KICAgICAgICAkbGFiZWxfY29udGVudCAuPSAnPC9kaXY+JzsKICAgIH0KICAgIC8vIHJlYWQgaW5pIGZpbGUgZm9yIGVhY2ggdGhlbWUKCiAgICAkZm9ybV90aGVtZV9zZXQtPnNldEV4dHJhKCJvbmNoYW5nZT0nc2hvd1RoZW1lU2VsZWN0ZWQodGhpcyknIik7CgogICAgJGZvcm0gPSBuZXcgQVBJVGhlbWVGb3JtKCR0aXRsZSwgJ3RoZW1lcycsICdpbmRleC5waHAnLCAncG9zdCcpOwogICAgJGZvcm0tPmFkZEVsZW1lbnQoJGZvcm1fdGhlbWVfc2V0KTsKICAgICRmb3JtLT5hZGRFbGVtZW50KG5ldyBBUElGb3JtTGFiZWwoJycsICI8ZGl2IGlkPSdzY3JlZW5zaG90Jz4iIC4gJGxhYmVsX2NvbnRlbnQgLiAnPC9kaXY+JykpOwoKICAgICRmb3JtLT5hZGRFbGVtZW50KG5ldyBBUElGb3JtSGlkZGVuKCdjb25mX2lkc1tdJywgJGNvbmZpZy0+Z2V0VmFyKCdjb25mX2lkJykpKTsKCiAgICByZXR1cm4gJHJldCA9IGFycmF5KCRmb3JtKTsKfQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6Mjp7czoxOToiXGNyZWF0ZUNvbmZpZ2Zvcm0oKSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8iOjU6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE5OiJcY3JlYXRlQ29uZmlnZm9ybSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6ImNyZWF0ZUNvbmZpZ2Zvcm0iO31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjY6ImNvbmZpZyI7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZXMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjU6e3M6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHR5cGUiO047czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo2OiJjb25maWciO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjI6e3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfAGtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6MTp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZAB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319fX1zOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo1MTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjE4OiJcY3JlYXRlVGhlbWVmb3JtKCkiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fIjo1OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxODoiXGNyZWF0ZVRoZW1lZm9ybSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTU6ImNyZWF0ZVRoZW1lZm9ybSI7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NjoiY29uZmlnIjtzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlcyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MDoiIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6NTp7czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AdHlwZSI7TjtzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AdmFyaWFibGVOYW1lIjtzOjY6ImNvbmZpZyI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8AdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mjp7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8AdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8Aa2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoxOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX19fXM6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6NDY7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjUxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjU2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fX1zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319'));

/* Child Type: integer */
$data['createdOn'] = 1518258376;
